package com.bookingInfoService.Controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.bookingInfoService.Entity.BookingInfoEntity;
import com.bookingInfoService.Exceptions.TicketNotFoundException;
import com.bookingInfoService.Service.BookingInfoService;

@RestController
@RequestMapping("/api/v1.0/flight")
public class BookingInfoController {

	@Autowired
	private BookingInfoService bookingInfoService;
	
	@GetMapping("/bookinginfo")
	public List<BookingInfoEntity> getAllAirlines(){
		return bookingInfoService.findAllAirlines();
	}
	
	@GetMapping("/ticket/{pNR}")    //Get Booked ticket details based on PNR
//	@ExceptionHandler(RecordNotFoundException.class)
	public BookingInfoEntity getTicketByPNR(@PathVariable int pNR){
		System.out.println("Finding ticket by PNR: "+ pNR);
		return bookingInfoService.findTicket(pNR);
	}

	@GetMapping("booking/history/{emailId}")  //Get Booked tickets history based on Email ID 
	public BookingInfoEntity getTicketByEmail(@PathVariable String userId){
		int id = Integer.parseInt(userId);
		System.out.println("Finding ticket by EMail: "+ id);
		return bookingInfoService.findTicketByEmail(id);
	}
	
	@PostMapping("/airline/register")   //New airline booking 
	public BookingInfoEntity saveInAirlines(@RequestBody BookingInfoEntity a) {
		return bookingInfoService.create(a);
	}
	
	@PostMapping("/booking/{flightNumber}")   //Book ticket 
	public BookingInfoEntity bookTicket(@RequestBody BookingInfoEntity flightNumber) {
		return bookingInfoService.createTicket(flightNumber);
	}
	
	@DeleteMapping("/booking/cancel/{pnr}")  //Cancel a booked ticket 
	
//	public BookingInfoEntity<Long> cancelTicket(@PathVariable int pNR) {
//
//        var isRemoved = postService.delete(id);
//
//        if (!isRemoved) {
//            return new ResponseEntity<>(HttpStatus.NOT_FOUND);
//        }
//
//        return new ResponseEntity<>(id, HttpStatus.OK);
//    }
	public BookingInfoEntity cancelBookedTicket(@RequestBody BookingInfoEntity b) {
		return bookingInfoService.cancelTicket(b);
	}

}
