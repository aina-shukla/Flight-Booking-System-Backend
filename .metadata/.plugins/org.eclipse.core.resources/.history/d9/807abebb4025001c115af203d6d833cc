package com.bookingInfoService.Service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bookingInfoService.Entity.BookingHistory;
import com.bookingInfoService.Entity.BookingInfoEntity;
import com.bookingInfoService.Exceptions.EmailNotFoundException;
import com.bookingInfoService.Exceptions.TicketNotFoundException;
import com.bookingInfoService.Repository.BookingInfoRepository;

@Service
public class BookingInfoService {

	@Autowired
	private BookingInfoRepository bookingInfoRepository;

	public List<BookingInfoEntity> findAllAirlines() {
		return bookingInfoRepository.findAll();
	}

	public BookingInfoEntity create(BookingInfoEntity a) {
		return bookingInfoRepository.save(a);
	}

	public BookingInfoEntity findTicket(int pNR) {
		Optional<BookingInfoEntity> optional = bookingInfoRepository.findById(pNR);
		if (optional.isPresent()) {
			return optional.get();
		} else {
			throw new TicketNotFoundException("Ticket with PNR " + pNR + " doesnot exist.");
		}

	}

	public BookingInfoEntity createTicket(BookingInfoEntity flightNumber) {
		return bookingInfoRepository.save(flightNumber);
	}

	public BookingInfoEntity cancelTicket(BookingInfoEntity b) {
		return bookingInfoRepository.save(b);
	}

	public BookingInfoEntity findTicketByEmail(int id) {
		Optional<BookingInfoEntity> optional = bookingInfoRepository.findById(id);
		if (optional.isPresent()) {
			return optional.get();
		} else {
			throw new TicketNotFoundException("Ticket with email " + id + " doesnot exist.");
		}
	}

	public BookingInfoEntity bookTicket(BookingInfoEntity b) {
		return bookingInfoRepository.save(b);

	}
}