package com.airlinesService.Service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Service;

import com.airlinesService.Entity.AirlinesEntity;
import com.airlinesService.Exceptions.FlightNotFoundException;
import com.airlinesService.Repository.AirlinesRepository;

@Service
public class AirlinesService {

	@Autowired
	private AirlinesRepository airlinesRepository;

	public List<AirlinesEntity> findAllAirlines() {
		return airlinesRepository.findAll();
	}

    @KafkaListener(topics = "creatingflights", groupId="group_id", containerFactory = "userKafkaListenerFactory")
	public AirlinesEntity create(AirlinesEntity a) {
		return airlinesRepository.save(a);
	}

	public AirlinesEntity updateAirline(int flightNumber, AirlinesEntity a) {
		if(airlinesRepository.existsById(flightNumber)) {	
			a.setFlightNumber(flightNumber);
			return airlinesRepository.save(a);
		} else {
			throw new FlightNotFoundException("Flight with flight number " + flightNumber + " doesnot exist.");
		}
	}
	
	public AirlinesEntity searchAllFlights(int flightNumber, String fromPlace, String toPlace, String startDateTime,
			String endDateTime) {
		Optional<AirlinesEntity> optional = airlinesRepository.findByFlightNumber(flightNumber);
		if (optional.isPresent()) {
			return optional.get();
		} else {
			throw new FlightNotFoundException("Flight with flight number " + flightNumber + " doesnot exist.");
		}
		
	}

}
